---
import { Formatter } from "@utils/formatter";
import type { GetStaticPaths } from "astro";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogLayout from "src/layouts/BlogLayout.astro";

export const getStaticPaths = (async () => {
  const blogPosts = await getCollection("blog");

  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const { Content, headings } = await post.render();

const author = await getEntry("author", post.data.author.id);

console.log(author);
---

<BlogLayout title={post.data.title}>
  <h1 class="text-xl text-gray-500 mb-0">{post.data.title}</h1>

  <a href="/" class="text-blue-500 hover:underline">Back</a>

  <div class="text-sm text-gray-400 flex mt-2 mb-3">
    <Image
      src={author.data.avatar}
      alt={author.data.name}
      width={50}
      height={50}
      class="rounded-full"
      transition:name={`${author.id}-avatar`}
    />

    <div class="flex flex-col ml-5">
      <a href={`/blog/${post.data.author.id}`}>{author.data.name}</a>
      <span class="text-xs text-gray-200"
        >{Formatter.formatDate(post.data.date)}</span
      >
    </div>
  </div>

  <Image
    src={post.data.image}
    alt={post.data.title}
    width={500}
    height={220}
    class="object-cover w-full h-[350px] rounded-md post-image"
    transition:name={`${post.slug}-image`}
  />

  <!-- TOC -->
  <h3 class="">Table of Contents</h3>
  <ul class="list-disc pl-4">
    {
      headings.map((heading) => (
        <li class="text-sm text-gray-500">
          <a href={`#${heading.slug}`}>{heading.text}</a>
        </li>
      ))
    }
  </ul>
  <Content />

  <div class="my-20">
    <a href="#btn-back">Go to top</a>
  </div></BlogLayout
>

<style>
  .post-image {
    margin: 0 auto;
  }
</style>
